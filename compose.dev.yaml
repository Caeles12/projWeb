networks:
  back:
    driver: bridge

services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    command: sh -c "ng serve --host 0.0.0.0"
    ports:
      - 4200:4200
    networks:
      - back

  db:
    container_name: database

    image: mariadb:latest
    restart: always
    command: --init-file /docker-entrypoint-initdb.d/init.sql
    environment:
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: administration
      MYSQL_USER: user
      MYSQL_PASSWORD: example

    networks:
      - back

    ports:
      - 3306:3306
    volumes:
      - mysql-data:/var/lib/mysql
      - ./backend/database.sql:/docker-entrypoint-initdb.d/init.sql
  
  rabbitmq:
    image: rabbitmq:management-alpine
    container_name: rabbitmq
    restart: always

    ports:
      - "5672:5672" # Port par d√©faut pour les connexions RabbitMQ
      - 15672:15672 # Port pour le panneau de gestion (UI)

    environment:
      RABBITMQ_DEFAULT_USER: 'admin'
      RABBITMQ_DEFAULT_PASS: 'admin'

    volumes:
      - rabbitmq-data:/var/lib/rabbitmq/mnesia/

    networks:
      - back
  
  producer:
    image: rabbitmq-processor:1.0-${QUARKUS_MODE:-jvm}
    build:
      context: rabbitmq-processor
      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672

    depends_on:
      - rabbitmq

    networks:
      - back

  maildev:
    container_name: maildev
    image: maildev/maildev
    ports:
      - "1080:1080"
      - "1025:1025"
    networks:
      - back

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: sh -c 'npm run start --resolveJsonModule'
    ports:
      - 3000:3000
    depends_on:
      - db
      - rabbitmq
    networks:
      - back

  nginx:
    image: nginx:latest
    container_name: nginx
    depends_on:
      - backend
      - frontend
      - maildev
    ports:
      - "1234:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - back
  
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - back
  
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - 3030:3000
    environment:
      GF_SECURITY_ADMIN_USER: 'admin'
      GF_SECURITY_ADMIN_PASSWORD: 'admin'
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/grafana-dashboard.yaml:/etc/grafana/provisioning/dashboards/dashboard.yaml
      - ./grafana/grafana-datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
      - ./grafana/dashboards/:/var/lib/grafana/dashboards
    networks:
      - back

volumes:
  mysql-data:
  rabbitmq-data:
  grafana-storage:
